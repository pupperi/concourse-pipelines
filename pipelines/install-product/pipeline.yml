resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: tile-config-convertor
  type: github-release
  source:
    user: rahul-kj
    repository: tile-config-convertor
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pipelines-repo
  type: git
  source:
    uri: ((git_url))
    branch: ((git_branch))
    username: ((git_username))
    password: ((git_token))

- name: pivnet-product
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((product_slug))
    product_version: ((product_version))

jobs:

- name: delete-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: create-opsman-env
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_env_file_name))
      PARAM_NAME: ((opsman_config))

  - task: unstage-tile
    file: pipelines-repo/tasks/unstage-product/task.yml
    input_mapping:
      env: env
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))
      PRODUCT_NAME: ((product-name))

  - task: create-apply-changes-config
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: config
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((apply_changes_file_name))
      PARAM_NAME: ((apply_changes_config))

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    input_mapping:
      env: env
      config: config
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))

- name: upload-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: pivnet-cli
      params:
        globs:
        - "*linux-amd64*"
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: create-opsman-env
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_env_file_name))
      PARAM_NAME: ((opsman_config))

  - task: upload-tile
    file: pipelines-repo/tasks/upload-product/task.yml
    input_mapping:
      env: env
      pivnet-product: pivnet-product
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))

  - task: download-stemcell
    file: pipelines-repo/tasks/download-stemcell/task.yml
    params:
      DEBUG: ((debug))
      PIVNET_API_TOKEN: ((pivnet_token))
      IAAS: ((iaas))
      IAAS_TYPE: ((iaas_type))
      STEMCELL_TYPE: ((stemcell_type))

  - task: upload-stemcell
    file: pipelines-repo/tasks/upload-stemcell/task.yml
    input_mapping:
      env: env
      stemcells: stemcells
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))

- name: generate-product-config
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [stage-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [stage-product]
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [stage-product]
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [upload-product]
    - get: tile-config-convertor
      params:
        globs: ["*linux*"]

  - task: create-opsman-env
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_env_file_name))
      PARAM_NAME: ((opsman_config))

  - task: generate-config
    file: pipelines-repo/tasks/generate-config/task.yml
    input_mapping:
      env: env
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))
      PRODUCT_NAME: ((product-name))

- name: stage-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [upload-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [upload-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [upload-product]

  - task: create-opsman-env
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_env_file_name))
      PARAM_NAME: ((opsman_config))

  - task: stage-tile
    file: pipelines-repo/tasks/stage-product/task.yml
    input_mapping:
      env: env
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))
      PRODUCT_NAME: ((product-name))
      DEPENDENCY_PRODUCT_TILES: ((dependency_product_tiles))

- name: config-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [stage-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [stage-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [stage-product]
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [upload-product]

  - task: create-opsman-env
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_env_file_name))
      PARAM_NAME: ((opsman_config))

  - task: create-product-config
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: config
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((config_file_name))
      PARAM_NAME: ((product_config))

  - task: config-tile
    file: pipelines-repo/tasks/config-product/task.yml
    input_mapping:
      env: env
      config: config
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))
      CONFIG_FILE_NAME: ((config_file_name))

- name: apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [config-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs: []
      passed: [config-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [config-product]
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [config-product]

  - task: create-opsman-env
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_env_file_name))
      PARAM_NAME: ((opsman_config))

  - task: create-apply-changes-config
    file: pipelines-repo/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: config
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((apply_changes_file_name))
      PARAM_NAME: ((apply_changes_config))

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    input_mapping:
      env: env
      config: config
    params:
      DEBUG: ((debug))
      OPSMAN_ENV_FILE_NAME: ((opsman_env_file_name))
      CONFIG_FILE_NAME: ((apply_changes_file_name))
